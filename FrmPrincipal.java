/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codigo;

//import java.awt.event.ActionEvent;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
//import java.io.PrintWriter;
import java.io.Reader;
import java.io.StringReader;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import java_c.runtime.Symbol;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Angel
 */
public class FrmPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form FrmPrincipal
     */
    public FrmPrincipal() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("TRANSPILADOR SQL TO NOSQL grupo: NO NAME");
    }
    File archivo;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAnalizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtResult = new javax.swing.JTextArea();
        texto1 = new javax.swing.JLabel();
        archivo1 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMongo = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAnalizarSin = new javax.swing.JTextArea();
        AnalizarSin = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 102));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(new java.awt.Color(255, 204, 153));

        btnAnalizar.setBackground(new java.awt.Color(0, 0, 0));
        btnAnalizar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAnalizar.setForeground(new java.awt.Color(240, 240, 240));
        btnAnalizar.setText("Analizar");
        btnAnalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalizarActionPerformed(evt);
            }
        });

        txtResult.setEditable(false);
        txtResult.setBackground(new java.awt.Color(0, 0, 0));
        txtResult.setColumns(20);
        txtResult.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        txtResult.setForeground(new java.awt.Color(255, 255, 255));
        txtResult.setRows(5);
        jScrollPane1.setViewportView(txtResult);

        texto1.setBackground(new java.awt.Color(51, 51, 51));
        texto1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        texto1.setForeground(new java.awt.Color(51, 51, 51));
        texto1.setText("C://Users//Angel//Desktop//CodePruebaSQL.txt");
        texto1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        archivo1.setBackground(new java.awt.Color(0, 0, 0));
        archivo1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        archivo1.setForeground(new java.awt.Color(255, 255, 255));
        archivo1.setText("Abrir archivo");
        archivo1.setBorderPainted(false);
        archivo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                archivo1ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Go to MongoDB");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtMongo.setEditable(false);
        txtMongo.setBackground(new java.awt.Color(0, 0, 0));
        txtMongo.setColumns(20);
        txtMongo.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        txtMongo.setForeground(new java.awt.Color(240, 240, 240));
        txtMongo.setRows(5);
        jScrollPane2.setViewportView(txtMongo);

        txtAnalizarSin.setEditable(false);
        txtAnalizarSin.setColumns(20);
        txtAnalizarSin.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        txtAnalizarSin.setRows(5);
        txtAnalizarSin.setText("Run:");
        jScrollPane3.setViewportView(txtAnalizarSin);

        AnalizarSin.setBackground(new java.awt.Color(0, 0, 0));
        AnalizarSin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AnalizarSin.setForeground(new java.awt.Color(255, 255, 255));
        AnalizarSin.setText("Analisis Sintactico");
        AnalizarSin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnalizarSinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(archivo1)
                                .addGap(18, 18, 18)
                                .addComponent(texto1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btnAnalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(AnalizarSin, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(244, 244, 244)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnAnalizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(texto1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(archivo1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(187, 187, 187)
                                .addComponent(jButton1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AnalizarSin, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void archivo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_archivo1ActionPerformed
        // TODO add your handling code here:
                
                
                JFileChooser fc = new JFileChooser();
                FileNameExtensionFilter filtro= new FileNameExtensionFilter("*.TXT", "txt");
                
                fc.setFileFilter(filtro);
                int seleccion = fc.showOpenDialog(fc);
                if(seleccion == JFileChooser.APPROVE_OPTION)
                {
                    File fichero = fc.getSelectedFile();
                    texto1.setText(fichero.getAbsolutePath());
                    
                }
                archivo = new File(fc.getSelectedFile().getAbsolutePath());
                System.out.println("button was clicked!");
    }//GEN-LAST:event_archivo1ActionPerformed

    private void btnAnalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalizarActionPerformed
        // TODO add your handling code here:
        String ruta1;
        ruta1 = texto1.getText();
        Reader lector = null;
        try {
            lector = new BufferedReader(new FileReader(ruta1));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        Lexer lexer = new Lexer(lector); 
        String resultado = "";
        while (true) {
            Tokens tokens = null;
        try {
            tokens = lexer.yylex();
        } catch (IOException ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
            if (tokens == null) {
                resultado += "FIN";
                txtResult.setText(resultado);
                return;
            }
            switch (tokens) {
                case ERROR:
                    resultado += "Simbolo no definido\n";
                    break;
                case Id: case Numero: case Seleciona: case DatoTabla: case Desde: case Donde:
                    resultado += lexer.lexeme + ": Es un " + tokens + "\n";
                    break;
                default:
                    resultado += "Token: " + tokens + "\n";
                    break;
            }
        }

        
    }//GEN-LAST:event_btnAnalizarActionPerformed

    String ST;
    private void AnalizarSinActionPerformed(java.awt.event.ActionEvent evt) {                                            
        try {
            // TODO add your handling code here:
            ST = new String(Files.readAllBytes(archivo.toPath()));
            Sintax s = new Sintax(new codigo.LexerCup(new StringReader(ST)));
            try {
                s.parse();
                txtAnalizarSin.setForeground(Color.blue);
                txtAnalizarSin.setText("Analisis realizado correctamente");
            } catch (Exception ex) {
                Symbol sym = s.getS();
                txtAnalizarSin.setForeground(Color.red);
                txtAnalizarSin.setText("Error de sintaxis. Linea: " + (sym.right + 1) + " Caracter: " + (sym.left + 1) + ", Texto: \"" + sym.value + "\"");
            }
        } catch (IOException ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }    
    }
    private String ids(int a){
        int i = 0;
        String ruta1;
        ruta1 = texto1.getText();
        Reader lector = null;
        try {
            lector = new BufferedReader(new FileReader(ruta1));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        Lexer lexer = new Lexer(lector);
        String resultado[] = new String[3];
        
        while (true) {
            Tokens tokens = null;
        try {
            tokens = lexer.yylex();

        } catch (IOException ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }

            if (tokens == null) {

                break;
            }
            if (tokens == Tokens.Id) {
                resultado[i] = lexer.lexeme;
                i++;
            }
 
        }
        return resultado[a];
    }
    private String datoDatabla(){

    int i = 0;
    String ruta1;
    ruta1 = texto1.getText();
    Reader lector = null;
    try {
        lector = new BufferedReader(new FileReader(ruta1));
    } catch (FileNotFoundException ex) {
        Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
    }
    Lexer lexer = new Lexer(lector);
    String resultado = "";

    while (true) {
        Tokens tokens = null;
    try {
        tokens = lexer.yylex();

    } catch (IOException ex) {
        Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
    }

        if (tokens == null) {

            break;
        }
        if (tokens == Tokens.DatoTabla) {
            resultado = lexer.lexeme;
            i++;
        }

    }
    return resultado;
}
    private String igual(){
    //String a="";
    int i = 0;
    String ruta1;
    ruta1 = texto1.getText();
    Reader lector = null;
    try {
        lector = new BufferedReader(new FileReader(ruta1));
    } catch (FileNotFoundException ex) {
        Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
    }
    Lexer lexer = new Lexer(lector);
    String resultado = "";

    while (true) {
        Tokens tokens = null;
    try {
        tokens = lexer.yylex();

    } catch (IOException ex) {
        Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
    }

        if (tokens == null) {

            break;
        }
        if (tokens == Tokens.Igual) {
            resultado = lexer.lexeme;
            return resultado;
            //i++;
        }

    }
    return "f";
}
    private String primercaso(String asd){
        asd = asd.replace("SELECT","db.");
        asd = asd.replace(ids(0),"");
        asd = asd.replace("FROM",".find()");// db. .find() carro
        asd = asd.replace(ids(1),"");
        asd = asd.replace("  ",ids(1));
        return asd;
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here
        //System.out.println(datoDatabla());
        char asd = ids(0).charAt(0); //ids(0)= *
        char eq = igual().charAt(0); //igual() = '='
        if (asd == '*') {
            ST = primercaso(ST);
            System.out.println("Estoy en *");
        }else{if (eq == '=') {//cuando exista un igual
            ST = ST.replace("SELECT","db.");
            ST = ST.replace(ids(0),"");
            ST = ST.replace("FROM",".find");
            ST = ST.replace("WHERE","()");
            ST = ST.replace("=","");
            ST = ST.replace(ids(1),"");
            ST = ST.replace(ids(2),"");
            ST = ST.replace(datoDatabla(),"");
            ST = ST.replace(".  .", "."+ids(1)+".");
            ST = ST.replace("()", "(\n{"+ids(2)+":"+datoDatabla()+"}"+",\n)");
            ST = ST.replace(",", ",\n{"+ids(0)+":1}");
            ST = ST.replace(" ", "");
            System.out.println("Estoy en =");
        }
        else{
            ST = ST.replace("SELECT","db.");
            ST = ST.replace(ids(0),"");
            ST = ST.replace(ids(1),"");
            ST = ST.replace("FROM",".find()");
            ST = ST.replace(".  .", "."+ids(1)+".");
            ST = ST.replace("()","(\n"+"\t{},\n{"+ids(0)+":1}\n)");
            System.out.println("Estoy en from");
        }}
        
        
        txtMongo.setText(ST);
        
       
    }//GEN-LAST:event_jButton1ActionPerformed
/*
    private void AnalizarSinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnalizarSinActionPerformed
        String ST;
        
        
        try {
            // TODO add your handling code here:

            ST = new String(Files.readAllBytes(archivo.toPath()));
            Sintax s = new Sintax(new codigo.LexerCup(new StringReader(ST)));
            //System.out.println(lector);
            try {
                s.parse();
                txtAnalizarSin.setText("Analisis realizado correctamente");
            } catch (Exception ex) {
                Symbol sym = s.getS();
                txtAnalizarSin.setText("Error de sintaxis. Linea: " + (sym.right + 1) + " Caracter: " + (sym.left + 1) + ", Texto: \"" + sym.value + "\"");
            }
        } catch (IOException ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }    
    }//GEN-LAST:event_AnalizarSinActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AnalizarSin;
    private javax.swing.JButton archivo1;
    private javax.swing.JButton btnAnalizar;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel texto1;
    private javax.swing.JTextArea txtAnalizarSin;
    private javax.swing.JTextArea txtMongo;
    private javax.swing.JTextArea txtResult;
    // End of variables declaration//GEN-END:variables
}
